<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Clientes extends \Entities\Clientes implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entities\\Clientes' . "\0" . 'id', '' . "\0" . 'Entities\\Clientes' . "\0" . 'email', '' . "\0" . 'Entities\\Clientes' . "\0" . 'telefone', '' . "\0" . 'Entities\\Clientes' . "\0" . 'nome', '' . "\0" . 'Entities\\Clientes' . "\0" . 'cpf', '' . "\0" . 'Entities\\Clientes' . "\0" . 'facebook', '' . "\0" . 'Entities\\Clientes' . "\0" . 'nivel', '' . "\0" . 'Entities\\Clientes' . "\0" . 'token', '' . "\0" . 'Entities\\Clientes' . "\0" . 'configuracoes', '' . "\0" . 'Entities\\Clientes' . "\0" . 'situacao', '' . "\0" . 'Entities\\Clientes' . "\0" . 'data'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entities\\Clientes' . "\0" . 'id', '' . "\0" . 'Entities\\Clientes' . "\0" . 'email', '' . "\0" . 'Entities\\Clientes' . "\0" . 'telefone', '' . "\0" . 'Entities\\Clientes' . "\0" . 'nome', '' . "\0" . 'Entities\\Clientes' . "\0" . 'cpf', '' . "\0" . 'Entities\\Clientes' . "\0" . 'facebook', '' . "\0" . 'Entities\\Clientes' . "\0" . 'nivel', '' . "\0" . 'Entities\\Clientes' . "\0" . 'token', '' . "\0" . 'Entities\\Clientes' . "\0" . 'configuracoes', '' . "\0" . 'Entities\\Clientes' . "\0" . 'situacao', '' . "\0" . 'Entities\\Clientes' . "\0" . 'data'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Clientes $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelefone($telefone = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelefone', [$telefone]);

        return parent::setTelefone($telefone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelefone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelefone', []);

        return parent::getTelefone();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', [$nome]);

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', []);

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setCpf($cpf = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpf', [$cpf]);

        return parent::setCpf($cpf);
    }

    /**
     * {@inheritDoc}
     */
    public function getCpf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpf', []);

        return parent::getCpf();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebook($facebook = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebook', [$facebook]);

        return parent::setFacebook($facebook);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebook()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebook', []);

        return parent::getFacebook();
    }

    /**
     * {@inheritDoc}
     */
    public function setNivel($nivel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNivel', [$nivel]);

        return parent::setNivel($nivel);
    }

    /**
     * {@inheritDoc}
     */
    public function getNivel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNivel', []);

        return parent::getNivel();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfiguracoes($configuracoes = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfiguracoes', [$configuracoes]);

        return parent::setConfiguracoes($configuracoes);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfiguracoes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfiguracoes', []);

        return parent::getConfiguracoes();
    }

    /**
     * {@inheritDoc}
     */
    public function setSituacao($situacao = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSituacao', [$situacao]);

        return parent::setSituacao($situacao);
    }

    /**
     * {@inheritDoc}
     */
    public function getSituacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSituacao', []);

        return parent::getSituacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setData($data = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', [$data]);

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', []);

        return parent::getData();
    }

}
